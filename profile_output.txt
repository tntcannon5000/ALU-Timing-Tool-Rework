Timer unit: 1e-07 s

Total time: 59.4787 s
File: C:\Users\niran\Documents\ALU-Timing-Tool-Rework\test_get_dist.py
Function: the_loop at line 101

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   101                                           @line_profiler.profile
   102                                           def the_loop():
   103                                               global dist_box
   104                                               global capturing
   105                                               global textarray
   106                                               global reader
   107                                               global camera
   108                                           
   109                                                   # Start the loop
   110       244      13969.0     57.2      0.0      while capturing:
   111       244       2911.0     11.9      0.0          if capturing:
   112       244      15976.0     65.5      0.0              start_time = systime.perf_counter()
   113       244    2002190.0   8205.7      0.3              window = camera.get_latest_frame()
   114       244      13190.0     54.1      0.0              height, width, _ = window.shape
   115       244      37521.0    153.8      0.0              top_right_region = window[50:height, 0:int(width * 0.35)]
   116                                           
   117       244       4348.0     17.8      0.0              if dist_box is None:
   118        16      32896.0   2056.0      0.0                  print("No bounding box found, searching for DIST...")
   119        16      19314.0   1207.1      0.0                  print("No bounding box found, searching for DIST...")
   120        16      37462.0   2341.4      0.0                  preprocessed_region = pre_process(top_right_region)
   121                                           
   122        16   59881019.0    4e+06     10.1                  results = reader.readtext(preprocessed_region)
   123                                           
   124                                                           # Convert image for drawing
   125        15      10392.0    692.8      0.0                  boxed = cv2.cvtColor(preprocessed_region, cv2.COLOR_GRAY2RGB)
   126                                                           
   127        35        459.0     13.1      0.0                  for i, (bbox, text, _) in enumerate(results):
   128        21        367.0     17.5      0.0                      if "dist" in text.lower():
   129                                                                   # Get bbox of "DIST"
   130         1         94.0     94.0      0.0                          dist_box = np.array(bbox)
   131         1        634.0    634.0      0.0                          x0, y0 = np.min(dist_box[:, 0]), np.min(dist_box[:, 1])
   132         1        196.0    196.0      0.0                          x1, y1 = np.max(dist_box[:, 0]), np.max(dist_box[:, 1])
   133                                           
   134                                                                   # Look for a % or 7 to the right on the same line
   135         1         29.0     29.0      0.0                          for j in range(i + 1, len(results)):
   136         1          6.0      6.0      0.0                              next_bbox, next_text, _ = results[j]
   137         1         35.0     35.0      0.0                              next_box = np.array(next_bbox)
   138         1        160.0    160.0      0.0                              nx0, ny0 = np.min(next_box[:, 0]), np.min(next_box[:, 1])
   139         1        156.0    156.0      0.0                              nx1, ny1 = np.max(next_box[:, 0]), np.max(next_box[:, 1])
   140                                           
   141                                                                       # Check if next box is horizontally aligned and to the right
   142         1         22.0     22.0      0.0                              same_line = abs(ny0 - y0) < 20  # small y-difference = same line
   143         1          5.0      5.0      0.0                              right_of_dist = nx0 > x1
   144         1         27.0     27.0      0.0                              ends_correctly = next_text.strip().endswith('%') or next_text.strip().endswith('7')
   145                                           
   146         1          5.0      5.0      0.0                              if same_line and right_of_dist and ends_correctly:
   147                                                                           # Extend bounding box to include both
   148         1         22.0     22.0      0.0                                  x0 = int(min(x0, nx0))
   149         1          8.0      8.0      0.0                                  y0 = int(min(y0, ny0))
   150         1          8.0      8.0      0.0                                  x1 = int(max(x1, nx1))
   151         1          5.0      5.0      0.0                                  y1 = int(max(y1, ny1))
   152         1          4.0      4.0      0.0                                  break  # only extend to first match
   153                                           
   154                                                                   # # imshow the boxed image
   155                                                                   # plt.imshow(boxed)
   156                                                                   # plt.axis('off')
   157                                                                   # plt.title('DIST to % box')
   158                                                                   # plt.show()
   159                                           
   160                                                                   # Return coordinates of the bounding box
   161         1         40.0     40.0      0.0                          dist_box = np.array([[x0, y0], [x1, y0], [x1, y1], [x0, y1]])
   162         1          5.0      5.0      0.0                          break  # only do once per frame
   163                                                       
   164                                           
   165                                                       #clear_output(wait=False)
   166                                           
   167                                                       # run clear in terminal
   168       243   49700524.0 204528.9      8.4              os.system('cls' if os.name == 'nt' else 'clear')  # Windows: cls, Unix/Linux/macOS: clear
   169                                           
   170                                                       # If we have the bounding box, crop the image
   171       243      12172.0     50.1      0.0              if dist_box is not None:
   172       229      79544.0    347.4      0.0                  roi = top_right_region[int(dist_box[0][1]):int(dist_box[2][1]), int(dist_box[0][0]):int(dist_box[1][0])]
   173       229      20750.0     90.6      0.0                  roi = roi[:, int(roi.shape[1] * 23 / 40):]
   174                                           
   175                                                           
   176                                           
   177                                                           # Preprocess the cropped image
   178       229     145157.0    633.9      0.0                  preprocessed_region = pre_process_distbox(roi)
   179                                                           # imshow the cropped image
   180                                                           # plt.imshow(preprocessed_region, cmap='gray')
   181                                                           # plt.axis('off')
   182                                                           # plt.title('Cropped image')
   183                                                           # plt.show()
   184                                           
   185                                                           #textxdddd = pytesseract.image_to_string(preprocessed_region, config=config)
   186                                           
   187       229  220422239.0 962542.5     37.1                  textxdddd = reader.readtext(preprocessed_region, detail=0, allowlist='0123456789%')
   188                                           
   189                                                       # Append text to a single string
   190       243       1469.0      6.0      0.0              try:
   191       243      10471.0     43.1      0.0                  text2 = ''.join(textxdddd).replace(" ", "")
   192                                                           # store text in an array
   193       236     345355.0   1463.4      0.1                  print("extracted text:", textxdddd)
   194       236       4185.0     17.7      0.0                  textxdddd = ""
   195       236       3171.0     13.4      0.0                  if not text2:
   196         8        149.0     18.6      0.0                      dist_box = None
   197         8       4161.0    520.1      0.0                      print("No DIST found in text, resetting bounding box.")
   198         7        157.0     22.4      0.0              except Exception as e:
   199         7        201.0     28.7      0.0                  dist_box = None
   200                                           
   201       243      10323.0     42.5      0.0              end_time = systime.perf_counter()    # End timing
   202       243       4307.0     17.7      0.0              elapsed_ms = (end_time - start_time) * 1000
   203       243     199977.0    823.0      0.0              print(f"Loop iteration took {elapsed_ms:.2f} ms")
   204                                           
   205       243  261749487.0    1e+06     44.0              systime.sleep(0.1)

 59.48 seconds - C:\Users\niran\Documents\ALU-Timing-Tool-Rework\test_get_dist.py:101 - the_loop
