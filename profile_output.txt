Timer unit: 1e-07 s

Total time: 217.518 s
File: C:\Users\niran\Documents\ALU-Timing-Tool-Rework\test_get_dist.py
Function: the_loop at line 110

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   110                                           @line_profiler.profile
   111                                           def the_loop():
   112                                               global dist_box
   113                                               global capturing
   114                                               global textarray
   115                                               global reader
   116                                               global camera
   117                                               global percentage
   118                                               global elapsed_ms
   119                                           
   120                                                   # Start the loop
   121       500      27431.0     54.9      0.0      while capturing:
   122       500       6053.0     12.1      0.0          if capturing:
   123       500      32012.0     64.0      0.0              start_time = systime.perf_counter()
   124       500    9015537.0  18031.1      0.4              window = camera.get_latest_frame()
   125       500      37670.0     75.3      0.0              height, width, _ = window.shape
   126       500     674155.0   1348.3      0.0              top_right_region = window[50:height, 0:int(width * 0.35)]
   127                                           
   128       500      12765.0     25.5      0.0              if dist_box is None:
   129       204     773939.0   3793.8      0.0                  print("No bounding box found, searching for DIST...")
   130       204     424204.0   2079.4      0.0                  print("No bounding box found, searching for DIST...")
   131       204     913705.0   4478.9      0.0                  preprocessed_region = pre_process(top_right_region)
   132                                           
   133       204  942203804.0    5e+06     43.3                  results = reader.readtext(preprocessed_region)
   134                                                           
   135       544       9534.0     17.5      0.0                  for i, (bbox, text, _) in enumerate(results):
   136       343       5338.0     15.6      0.0                      if "dist" in text.lower():
   137                                                                   # Get bbox of "DIST"
   138         3        391.0    130.3      0.0                          dist_box = np.array(bbox)
   139         3       1790.0    596.7      0.0                          x0, y0 = np.min(dist_box[:, 0]), np.min(dist_box[:, 1])
   140         3        925.0    308.3      0.0                          x1, y1 = np.max(dist_box[:, 0]), np.max(dist_box[:, 1])
   141                                           
   142                                                                   # Look for a % or 7 to the right on the same line
   143         6        101.0     16.8      0.0                          for j in range(i + 1, len(results)):
   144         5         61.0     12.2      0.0                              next_bbox, next_text, _ = results[j]
   145         5        235.0     47.0      0.0                              next_box = np.array(next_bbox)
   146         5       1086.0    217.2      0.0                              nx0, ny0 = np.min(next_box[:, 0]), np.min(next_box[:, 1])
   147         5       1025.0    205.0      0.0                              nx1, ny1 = np.max(next_box[:, 0]), np.max(next_box[:, 1])
   148                                           
   149                                                                       # Check if next box is horizontally aligned and to the right
   150         5        110.0     22.0      0.0                              same_line = abs(ny0 - y0) < 20  # small y-difference = same line
   151         5         24.0      4.8      0.0                              right_of_dist = nx0 > x1
   152         5        152.0     30.4      0.0                              ends_correctly = next_text.strip().endswith('%') or next_text.strip().endswith('7')
   153                                           
   154         5         38.0      7.6      0.0                              if same_line and right_of_dist and ends_correctly:
   155                                                                           # Extend bounding box to include both
   156         2         89.0     44.5      0.0                                  x0 = int(min(x0, nx0))
   157         2         31.0     15.5      0.0                                  y0 = int(min(y0, ny0))
   158         2         37.0     18.5      0.0                                  x1 = int(max(x1, nx1))
   159         2         24.0     12.0      0.0                                  y1 = int(max(y1, ny1))
   160         2         19.0      9.5      0.0                                  break  # only extend to first match
   161                                           
   162                                                                   # # imshow the boxed image
   163                                                                   # plt.imshow(boxed)
   164                                                                   # plt.axis('off')
   165                                                                   # plt.title('DIST to % box')
   166                                                                   # plt.show()
   167                                           
   168                                                                   # Return coordinates of the bounding box
   169         3        170.0     56.7      0.0                          dist_box = np.array([[x0, y0], [x1, y0], [x1, y1], [x0, y1]])
   170         3         29.0      9.7      0.0                          break  # only do once per frame
   171                                                       
   172                                           
   173                                                       #clear_output(wait=False)
   174                                           
   175                                                       # run clear in terminal
   176                                                       #os.system('cls' if os.name == 'nt' else 'clear')  # Windows: cls, Unix/Linux/macOS: clear
   177                                                       #os.system('cls')
   178                                                       # If we have the bounding box, crop the image
   179       500       5604.0     11.2      0.0              if dist_box is not None:
   180       299     454047.0   1518.6      0.0                  roi = top_right_region[int(dist_box[0][1]):int(dist_box[2][1]), int(dist_box[0][0]):int(dist_box[1][0])]
   181       299      20114.0     67.3      0.0                  roi = roi[:, int(roi.shape[1] * 23 / 40):]
   182                                           
   183                                                           
   184                                           
   185                                                           # Preprocess the cropped image
   186       299     190571.0    637.4      0.0                  preprocessed_region = pre_process_distbox(roi)
   187                                                           # imshow the cropped image
   188                                                           # plt.imshow(preprocessed_region, cmap='gray')
   189                                                           # plt.axis('off')
   190                                                           # plt.title('Cropped image')
   191                                                           # plt.show()
   192                                           
   193                                                           #textxdddd = pytesseract.image_to_string(preprocessed_region, config=config)
   194                                           
   195       299  216935269.0 725536.0     10.0                  textxdddd = reader.readtext(preprocessed_region, detail=0, allowlist='0123456789%')
   196                                           
   197                                                       # Append text to a single string
   198       500       2642.0      5.3      0.0              try:
   199       500      17857.0     35.7      0.0                  text2 = ''.join(textxdddd).replace(" ", "")
   200                                                           # store text in an array
   201       453       9929.0     21.9      0.0                  percentage = text2.strip()
   202       453       2045.0      4.5      0.0                  textxdddd = ""
   203                                           
   204       453       3284.0      7.2      0.0                  if not text2:
   205       157        891.0      5.7      0.0                      dist_box = None
   206       157     410024.0   2611.6      0.0                      print("No DIST found in text, resetting bounding box.")
   207        47        882.0     18.8      0.0              except Exception as e:
   208        47       1071.0     22.8      0.0                  dist_box = None
   209       500       3928.0      7.9      0.0              text2 = ""
   210       500      21304.0     42.6      0.0              end_time = systime.perf_counter()    # End timing
   211       500       9574.0     19.1      0.0              elapsed_ms = (end_time - start_time) * 1000
   212       500    1006022.0   2012.0      0.0              print(f"Loop iteration took {elapsed_ms:.2f} ms")
   213                                           
   214       500 1001943033.0    2e+06     46.1              systime.sleep(0.2)

217.52 seconds - C:\Users\niran\Documents\ALU-Timing-Tool-Rework\test_get_dist.py:110 - the_loop
